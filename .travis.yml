language: java
jdk:
  - openjdk8

# Travis Ci가 어느 branch가 Push될 때 실행할 것인지
branches:
  only:
    - master

before_install:
  chmod +x gradlew

# Travis CI Server's Home
cache: # gradle을 통해 의존성을 받게 되면, 이를 해당 directory에 cache하여 같은 의존성은 다음 배포 때 다시 받지 않도록 설정
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# Commands to perform when pushed to the brach
script: "./gradlew clean build"

before_deploy:
  - zip -r springboot-webservice * # CodeDeploy는 Jar 파일을 인식하지 못하므로 Jar + 기타 설정 파일들을 모아 압축함
  - mkdir -p deploy
  - mv springboot-webservice.zip deploy/springboot-webservice.zip

# S3로 파일 업로드 or CodeDeploy로 배포 등 외부 서비스와 연동될 행위들을 선언
deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: kima-springboot-build # bucket
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private으로
    local_dir: deploy # S3로 전송할 파일 위치 : before_deploy에서 생성한 디렉토리
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: kima-springboot-build # S3 bucket
    key: springboot-webservice.zip # build 파일을 압축해서 전달
    bundle_type: zip
    application: springboot2-webservice # 웹 콘솔에서 등록한 CodeDeploy Application
    deployment-group: springboot2-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포그룹
    region: ap-northeast-2
    wait-until-deployed: true

# Alarm by mail when CI execution is complete
notifications:
  email:
    recipients:
      - onionlily123@naver.com